
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://scogbjfwcpdwzkeejgsx.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNjb2diamZ3Y3Bkd3prZWVqZ3N4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI1NDQ3NDUsImV4cCI6MjA1ODEyMDc0NX0.vTGxoFGFUrUW0eO5_vbTZgPhSTWKXPL5vrwY4bZt_YU";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Vérifier la connexion avec un log
console.log('Supabase client initialisé');

// Créer le bucket de stockage au démarrage de l'application si nécessaire
export const initStorage = async () => {
  try {
    // Vérifier si le bucket existe déjà
    const { data: buckets, error: bucketsError } = await supabase.storage.listBuckets();
    
    if (bucketsError) {
      console.error('Erreur lors de la récupération des buckets:', bucketsError);
      return;
    }
    
    // Vérifier si le bucket 'vetements' existe
    const vetementsBucket = buckets.find(b => b.name === 'vetements');
    
    if (!vetementsBucket) {
      // Créer le bucket 'vetements'
      const { error } = await supabase.storage.createBucket('vetements', {
        public: true,
        fileSizeLimit: 5242880, // 5MB
      });
      
      if (error) {
        console.error('Erreur lors de la création du bucket:', error);
      } else {
        console.log('Bucket "vetements" créé avec succès');
      }
    } else {
      console.log('Le bucket "vetements" existe déjà');
    }
  } catch (error) {
    console.error('Erreur lors de l\'initialisation du stockage:', error);
  }
};

// Initialiser le stockage
initStorage();
